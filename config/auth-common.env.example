# authentication method: basic|ldap|keycloak|keycloak_remote|no_authentication
NGINX_AUTH_MODE=basic

# When using Keycloak authentication (NGINX_AUTH_MODE=keycloak or keycloak_remote),
#   require authenticated users to belong to zero or more groups and/or to be
#   assigned zero or more roles, respectively. Multiple values may be specified
#   with a comma-separated list. Note that these requirements are cumulative:
#   users must match all of the items specified. An empty value means no
#   group/role restriction is applied. Note that NGINX LDAP (NGINX_AUTH_MODE=ldap)
#   can also require group membership, but this is specified in nginx_ldap.conf
#   with "require group" rather than here.
NGINX_REQUIRE_GROUP=
NGINX_REQUIRE_ROLE=

################################################################################
# These are the "backend" roles defined by Malcolm and mapped into services'
#   user/role capabilities where possible, including:
#   * OpenSearch (provided by the OpenSearch Security plugin)
#     - https://docs.opensearch.org/docs/latest/security/configuration/configuration/
#     - https://docs.opensearch.org/docs/latest/security/configuration/yaml/
#     - OpenSearch's predefined roles can be used directly without needing to add them here
#       + https://docs.opensearch.org/docs/latest/security/access-control/users-roles/#predefined-roles
#   * Arkime
#     - https://arkime.com/roles
#   * NetBox
#     - https://netboxlabs.com/docs/netbox/en/stable/features/authentication-permissions/
#     - https://netboxlabs.com/docs/netbox/en/stable/administration/permissions/
#     - https://www.packetcoders.io/mastering-nextbox-user-access-with-permission-constraints/
# Other roles for Malcolm-specific functions that are not part of another component are handled
#   by Malcolm directly, either in the nginx-proxy container or in the code providing that functionality.
# ------------------------------------------------------------------------------
# Whether or not RBAC is enabled. RBAC is only available when NGINX_AUTH_MODE is keycloak|keycloak_remote,
#   otherwise all users essentially have admin level privileges. The NGINX_REQUIRE_ROLE value above
#   is not affected by ROLE_BASED_ACCESS's value.
ROLE_BASED_ACCESS=false
# General access roles
# ROLE_ADMIN - Unrestricted access
ROLE_ADMIN=admin
# ROLE_READ_ACCESS - Read-only access across all components
ROLE_READ_ACCESS=read_access
# ROLE_READ_WRITE_ACCESS - Read/write access across all components, excluding some admin functions
ROLE_READ_WRITE_ACCESS=read_write_access
# ------------------------------------------------------------------------------
# Specific access roles
# ROLE_ARKIME_ADMIN - Maps to the built-in arkimeAdmin role
ROLE_ARKIME_ADMIN=arkime_admin
# ROLE_ARKIME_READ_ACCESS - Maps to a user-defined role with read-only Viewer access
ROLE_ARKIME_READ_ACCESS=arkime_read_access
# ROLE_ARKIME_READ_WRITE_ACCESS - Maps to a user-defined role with read/write Viewer access
ROLE_ARKIME_READ_WRITE_ACCESS=arkime_read_write_access
# ROLE_ARKIME_PCAP_ACCESS - Maps to a user-defined role with access to viewing/exporting PCAP payloads in Viewer
ROLE_ARKIME_PCAP_ACCESS=arkime_pcap_access
# ROLE_ARKIME_HUNT_ACCESS - Maps to a user-defined role with access to packet search ("Hunt") in Viewer
ROLE_ARKIME_HUNT_ACCESS=arkime_hunt_access
# ROLE_ARKIME_WISE_READ_ACCESS - Maps to the built-in wiseUser role
ROLE_ARKIME_WISE_READ_ACCESS=arkime_wise_read_access
# ROLE_ARKIME_WISE_READ_WRITE_ACCESS - Maps to the built-in wiseAdmin role
ROLE_ARKIME_WISE_READ_WRITE_ACCESS=arkime_wise_read_write_access
# ROLE_DASHBOARDS_READ_ACCESS - Read-only access to OpenSearch Dashboards visualizations, but not all Dashboards apps
ROLE_DASHBOARDS_READ_ACCESS=dashboards_read_access
# ROLE_DASHBOARDS_READ_ALL_APPS_ACCESS - Read-only access to all OpenSearch Dashboards visualizations and apps
ROLE_DASHBOARDS_READ_ALL_APPS_ACCESS=dashboards_read_all_apps_access
# ROLE_DASHBOARDS_READ_WRITE_ACCESS - Read/write access to OpenSearch Dashboards visualizations, but not all Dashboards apps
ROLE_DASHBOARDS_READ_WRITE_ACCESS=dashboards_read_write_access
# ROLE_DASHBOARDS_READ_WRITE_ALL_APPS_ACCESS - Read/write access to OpenSearch Dashboards visualizations and apps
ROLE_DASHBOARDS_READ_WRITE_ALL_APPS_ACCESS=dashboards_read_write_all_apps_access
# ROLE_EXTRACTED_FILES - Access to extracted file downloads
ROLE_EXTRACTED_FILES=extracted_files
# ROLE_NETBOX_READ_ACCESS - Read-only access to NetBox
ROLE_NETBOX_READ_ACCESS=netbox_read_access
# ROLE_NETBOX_READ_WRITE_ACCESS - Read/write access to NetBox
ROLE_NETBOX_READ_WRITE_ACCESS=netbox_read_write_access
# ROLE_UPLOAD - Access to upload artifact interface
ROLE_UPLOAD=upload
# ROLE_CAPTURE_SERVICE - Internal-use role for service account used by Arkime capture on remote network sensor
ROLE_CAPTURE_SERVICE=capture_service
