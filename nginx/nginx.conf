# Copyright (c) 2025 Battelle Energy Alliance, LLC.  All rights reserved.

daemon off;

include /etc/nginx/nginx_logging.conf;

include /etc/nginx/nginx_envs.conf;

worker_processes 1;

events { worker_connections 1024; }

http {
  include /etc/nginx/nginx_system_resolver.conf;

  lua_shared_dict token_cache 10m;
  lua_shared_dict discovery 1m;
  lua_shared_dict jwks 1m;

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/mime.types;
  sendfile on;

  client_max_body_size 20m;
  client_body_buffer_size 128k;
  client_header_buffer_size 256k;
  large_client_header_buffers 8 256k;

  fastcgi_buffers 16 64k;
  fastcgi_buffer_size 256k;
  fastcgi_read_timeout 300s;
  fastcgi_busy_buffers_size 384k;
  fastcgi_request_buffering off;

  proxy_http_version 1.1;
  proxy_headers_hash_max_size 1024;
  proxy_headers_hash_bucket_size 128;
  proxy_connect_timeout 180s;
  proxy_read_timeout 300s;
  proxy_send_timeout 300s;
  proxy_buffer_size 512k;
  proxy_buffers 16 4m;
  proxy_busy_buffers_size 16m;
  proxy_cookie_flags * samesite=none secure;

  # if LDAP authentication is enabled, this will configure the ldap_server section
  include /etc/nginx/nginx_ldap_rt.conf;

  upstream arkime {
    server arkime:8005;
  }

  upstream api {
    server api:5000;
  }

  upstream upload {
    server upload:80;
  }

  upstream dashboards-maps {
    server dashboards-helper:28991;
  }

  upstream logstash-stats {
    server logstash:9600;
  }

  upstream extracted-file-http-server {
    server file-monitor:8440;
  }

  include /etc/nginx/nginx_opensearch_upstream_rt.conf;
  include /etc/nginx/nginx_dashboards_upstream_rt.conf;
  include /etc/nginx/nginx_htadmin_upstream_rt.conf;
  include /etc/nginx/nginx_keycloak_upstream_rt.conf;
  include /etc/nginx/nginx_netbox_upstream_rt.conf;

  map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    default $http_x_forwarded_proto;
    '' $scheme;
  }

  map $proxy_x_forwarded_proto_override $proxy_x_forwarded_proto_final {
    default $proxy_x_forwarded_proto_override;
    '' $proxy_x_forwarded_proto;
  }

  init_by_lua_block {
      local nginx_helpers = require("nginx_auth_helpers")
      nginx_helpers.init()
  }

  # health check ("here I am") without authentication
  server {
    include /etc/nginx/listen_8443.conf;
    include /etc/nginx/nginx_ssl_config.conf;

    location = /robots.txt {
      default_type text/plain;
      return 200 'User-agent: *\nDisallow: /\n';
    }
    location / {
      default_type text/plain;
      return 200 'Malcolm\n';
    }
  }

  # Main web interface
  server {
    include /etc/nginx/listen_443.conf;
    include /etc/nginx/nginx_ssl_config.conf;

    # favicon, logos, banners, etc.
    include /etc/nginx/nginx_image_aliases.conf;

    # the /auth endpoint for htpasswd if enabled
    include /etc/nginx/nginx_auth_location.conf;

    # the /keycloak endpoint for Keycloak if enabled
    include /etc/nginx/nginx_keycloak_location_rt.conf;

    # the /netbox endpoint for NetBox if enabled
    include /etc/nginx/nginx_netbox_location_rt.conf;

    # Malcolm file upload
    location /upload {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      rewrite ^/upload(.*)/?$ /$1 break;
      proxy_pass http://upload;
      proxy_redirect off;
      proxy_request_buffering off;
      proxy_buffering off;
      client_max_body_size 50G;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }
    location /server/php {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass http://upload/server/php;
      proxy_redirect off;
      proxy_request_buffering off;
      proxy_buffering off;
      client_max_body_size 50G;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }


    # extracted file download
    location ~* ^/extracted-files\b(.*) {
      include /etc/nginx/nginx_auth_rt.conf;
      # thanks to https://stackoverflow.com/a/31440150, handle spaces in names
      set $filereq $1;
      proxy_pass http://extracted-file-http-server$filereq$is_args$args;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # extracted files from dashboards link (because Dashboards is prepending its own prefix, we have to handle it)
    location ~* ^/dashboards/app/extracted-files/(.*) {
      set $forwarded_scheme $scheme;
      if ($http_x_forwarded_proto = 'https') {
          set $forwarded_scheme https;
      }
      rewrite ^/dashboards/app/extracted-files/(.*) $forwarded_scheme://$host/extracted-files/$1 redirect;
      proxy_pass http://extracted-file-http-server;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # extracted file download hedgehog redirect
    location ~* ^/(dashboards/app/)?hh-extracted-files/([a-zA-Z0-9-\.]+)\b(.*) {
      include /etc/nginx/nginx_auth_rt.conf;
      set $upstream $2:8006;
      set $filereq $3;
      rewrite ^/(dashboards/app/)?hh-extracted-files/([a-zA-Z0-9-\.]+)(.*)$ $filereq break;
      proxy_pass https://$upstream;
      proxy_ssl_verify off;
      proxy_set_header Host $2;
      proxy_set_header X-Malcolm-Forward "/hh-extracted-files/$2";
    }

    # Arkime -> Dashboards shortcut
    location ~* /idark2dash(.*) {
      set $filter_start_time now-1d;
      if ($arg_start != '') {
        set $filter_start_time \'$arg_start\';
      }

      set $filter_stop_time now;
      if ($arg_stop != '') {
        set $filter_stop_time \'$arg_stop\';
      }

      set $filter_field undefined;
      if ($arg_field != '') {
        set $filter_field $arg_field;
      }

      set $filter_value undefined;
      if ($arg_value != '') {
        set $filter_value $arg_value;
      }

      include /etc/nginx/nginx_idark2dash_rewrite_rt.conf;
    }

    # Dashboards -> Arkime shortcut
    location ~* /iddash2ark/(.*) {
      set $forwarded_scheme $scheme;
      if ($http_x_forwarded_proto = 'https') {
          set $forwarded_scheme https;
      }
      rewrite ^.*/iddash2ark/(.*) $forwarded_scheme://$host/arkime/sessions?expression=($1) redirect;
      proxy_pass $arkime_protocol://arkime;
      proxy_ssl_verify off;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # OpenSearch dashboards (or Kibana)
    location /dashboards {
      include /etc/nginx/nginx_dashboards_rewrite_rt.conf;
    }

    # offline region maps for dashboards
    location /world.geojson {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_pass http://dashboards-maps;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # Fix cyberchef JS module(s)
    # https://localhost/arkime/session/190924-KgO9H30qhdREw7ltsDXn1Rgp/modules/Regex.js
    location ~* ^/arkime/session/.*/(modules/.*\.js) {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_hide_header Content-Type;
      proxy_set_header Content-Type "application/javascript";
      default_type application/javascript;
      add_header X-Content-Type-Options 'nosniff';
      proxy_pass $arkime_protocol://arkime/cyberchef/$1;
      proxy_ssl_verify off;
      proxy_redirect off;
      proxy_set_header Authorization "";
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # passthrough Logstash statistics from the Malcolm API
    location /mapi/logstash/ {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_pass http://logstash-stats/;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # passthrough OpenSearch from the Malcolm API
    include /etc/nginx/nginx_opensearch_mapi_rt.conf;

    # Malcolm API
    location /mapi {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_pass http://api;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # Arkime
    location /arkime {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_pass $arkime_protocol://arkime;
      proxy_redirect off;
      proxy_set_header Authorization "";
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    # Robots (don't crawl me bro)
    location = /robots.txt {
      include /etc/nginx/nginx_auth_rt.conf;
      limit_except GET { deny all; }
      default_type text/plain;
      return 200 'User-agent: *\nDisallow: /\n';
    }

    # Landing Page and README
    location / {
      include /etc/nginx/nginx_auth_rt.conf;
      root /usr/share/nginx/html;
      index index.html
      try_files $uri $uri/ =404;
      error_page 404 /404.html;
      error_page 502 /502.html;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }
  }

  # OpenSearch API
  server {
    include /etc/nginx/listen_9200.conf;
    include /etc/nginx/nginx_ssl_config.conf;

    # favicon, logos, banners, etc.
    include /etc/nginx/nginx_image_aliases.conf;

    location / {
      # use either auth_basic or auth_ldap
      include /etc/nginx/nginx_auth_opensearch_rt.conf;
      include /etc/nginx/nginx_opensearch_api_rt.conf;
      proxy_set_header X-Forwarded-Roles "$capture_service_role";
    }
  }

}
