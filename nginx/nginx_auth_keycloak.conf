access_by_lua_block {
    local nginx_helpers = require("nginx_auth_helpers")

    local opts = {
        redirect_uri = os.getenv("KEYCLOAK_AUTH_REDIRECT_URI"),
        discovery = os.getenv("KEYCLOAK_AUTH_URL") .. "/realms/" .. os.getenv("KEYCLOAK_AUTH_REALM") .. "/.well-known/openid-configuration",
        client_id = os.getenv("KEYCLOAK_CLIENT_ID"),
        client_secret = os.getenv("KEYCLOAK_CLIENT_SECRET"),
        session_contents = {id_token=true, access_token=true},
        ssl_verify = "no",
        accept_none_alg = false,
        renew_access_token_on_expiry = true,
        accept_unsupported_alg = false,
        revoke_tokens_on_logout = true
    }

    local res, err = require("resty.openidc").authenticate(opts)
    if err then
      ngx.log(ngx.ERR, "Error during authentication: " .. err)
      ngx.status = ngx.HTTP_UNAUTHORIZED
      ngx.exit(ngx.HTTP_UNAUTHORIZED)
    end

    local helper_err, username, groups, roles = nginx_helpers.check_groups_and_roles(res.id_token)
    if helper_err ~= ngx.HTTP_OK then
        ngx.status = helper_err
        ngx.exit(helper_err)
    end
    helper_err = nginx_helpers.check_rbac(res.id_token)
    if helper_err ~= ngx.HTTP_OK then
        ngx.status = helper_err
        ngx.exit(helper_err)
    end

    nginx_helpers.set_headers(username, nil, groups, roles)
}
