---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: malcolm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      protocol: TCP
      name: redis
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: malcolm
  labels:
    app: redis
    role: database
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: database
    spec:
      containers:
      - name: redis-container
        image: ghcr.io/idaholab/malcolm/redis:25.06.0
        imagePullPolicy: Always
        stdin: false
        tty: true
        command: ["/sbin/tini"]
        args: ["--",
               "/usr/local/bin/docker-uid-gid-setup.sh",
               "/usr/local/bin/service_check_passthrough.sh",
               "-s",
               "redis",
               "sh",
               "-c",
               "redis-server --appendonly yes --requirepass $(REDIS_PASSWORD)"]
        ports:
          - name: redis
            protocol: TCP
            containerPort: 6379
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: netbox-common-env
          - secretRef:
              name: redis-env
        env:
          - name: VIRTUAL_HOST
            value: "redis.malcolm.local"
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/container_health.sh
          initialDelaySeconds: 45
          periodSeconds: 60
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: redis-var-local-catrust-volume
          - mountPath: /data
            name: redis-volume
            subPath: redis
      initContainers:
      - name: redis-dirinit-container
        image: ghcr.io/idaholab/malcolm/dirinit:25.06.0
        imagePullPolicy: Always
        stdin: false
        tty: true
        resources:
          requests:
            cpu: "0.25"
            memory: "128Mi"
          limits:
            cpu: "0.5"
            memory: "256Mi"
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/config:redis"
        volumeMounts:
          - name: redis-volume
            mountPath: "/data/config"
      volumes:
        - name: redis-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: redis-volume
          persistentVolumeClaim:
            claimName: config-claim