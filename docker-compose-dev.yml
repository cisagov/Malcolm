# Copyright (c) 2025 Battelle Energy Alliance, LLC.  All rights reserved.

services:
  opensearch:
    build:
      context: .
      dockerfile: Dockerfiles/opensearch.Dockerfile
    image: ghcr.io/idaholab/malcolm/opensearch:25.06.0
    # Technically the "hedgehog" profile doesn't have OpenSearch, but in that case
    #   OPENSEARCH_PRIMARY will be set to remote, which means the container will
    #   start but not actually run OpenSearch. It's included in both profiles to
    #   satisfy some other containers' depends_on.
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: opensearch
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/auth-common.env
    - ./config/opensearch.env
    environment:
      VIRTUAL_HOST: 'os.malcolm.local'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      # IPC_LOCK - to lock memory, preventing swapping
    - IPC_LOCK
      # SYS_RESOURCE - for increasing memlock limits
    - SYS_RESOURCE
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.secondary.curlrc
      target: /var/local/curlrc/.opensearch.secondary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./opensearch
      target: /usr/share/opensearch/data
    - type: bind
      bind:
        create_host_path: false
      source: ./opensearch-backup
      target: /opt/opensearch/backup
    - type: bind
      bind:
        create_host_path: false
      source: ./opensearch/opensearch.keystore
      target: /usr/share/opensearch/config/persist/opensearch.keystore
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 180s
  dashboards-helper:
    build:
      context: .
      dockerfile: Dockerfiles/dashboards-helper.Dockerfile
    image: ghcr.io/idaholab/malcolm/dashboards-helper:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: dashboards-helper
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/netbox-common.env
    - ./config/dashboards.env
    - ./config/dashboards-helper.env
    environment:
      VIRTUAL_HOST: 'dashboards-helper.malcolm.local'
    depends_on:
    - opensearch
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.secondary.curlrc
      target: /var/local/curlrc/.opensearch.secondary.curlrc
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 30s
  dashboards:
    build:
      context: .
      dockerfile: Dockerfiles/dashboards.Dockerfile
    image: ghcr.io/idaholab/malcolm/dashboards:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: dashboards
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    environment:
      VIRTUAL_HOST: 'dashboards.malcolm.local'
    depends_on:
    - opensearch
    - dashboards-helper
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 210s
  logstash:
    build:
      context: .
      dockerfile: Dockerfiles/logstash.Dockerfile
    image: ghcr.io/idaholab/malcolm/logstash-oss:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: logstash
    networks:
    - default
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      # IPC_LOCK - to lock memory, preventing swapping
    - IPC_LOCK
      # SYS_RESOURCE - for increasing memlock limits
    - SYS_RESOURCE
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/netbox-common.env
    - ./config/netbox.env
    - ./config/netbox-secret.env
    - ./config/beats-common.env
    - ./config/lookup-common.env
    - ./config/logstash.env
    depends_on:
    - opensearch
    ports:
    - 127.0.0.1:5044:5044
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.secondary.curlrc
      target: /var/local/curlrc/.opensearch.secondary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/maps/malcolm_severity.yaml
      target: /etc/malcolm_severity.yaml
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/certs/ca.crt
      target: /certs/ca.crt
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/certs/server.crt
      target: /certs/server.crt
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/certs/server.key
      target: /certs/server.key
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/config/logstash.yml
      target: /usr/share/logstash/config/logstash.orig.yml
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/pipelines
      target: /usr/share/logstash/malcolm-pipelines.available
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/patterns
      target: /usr/share/logstash/malcolm-patterns
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./logstash/ruby
      target: /usr/share/logstash/malcolm-ruby
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh", "-s"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 600s
  filebeat:
    build:
      context: .
      dockerfile: Dockerfiles/filebeat.Dockerfile
    image: ghcr.io/idaholab/malcolm/filebeat-oss:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: filebeat
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/upload-common.env
    - ./config/nginx.env
    - ./config/beats-common.env
    - ./config/filebeat.env
    ports:
    - 127.0.0.1:5045:5045
    volumes:
    - nginx-log-path:/nginx:ro
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs
      target: /zeek
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata-logs
      target: /suricata
    - type: bind
      bind:
        create_host_path: false
      source: ./filebeat/certs/ca.crt
      target: /certs/ca.crt
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./filebeat/certs/client.crt
      target: /certs/client.crt
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./filebeat/certs/client.key
      target: /certs/client.key
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  arkime:
    build:
      context: .
      dockerfile: Dockerfiles/arkime.Dockerfile
    image: ghcr.io/idaholab/malcolm/arkime:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: arkime
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/upload-common.env
    - ./config/auth-common.env
    - ./config/auth.env
    - ./config/arkime.env
    - ./config/arkime-offline.env
    - ./config/arkime-secret.env
    environment:
      VIRTUAL_HOST: 'arkime.malcolm.local'
    depends_on:
    - opensearch
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/lua
      target: /opt/arkime/lua
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/rules
      target: /opt/arkime/rules
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap
      target: /data/pcap
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/etc/config.ini
      target: /opt/arkime/etc/config.orig.ini
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/etc/user_settings.json
      target: /opt/arkime/etc/user_settings.json
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/wise/source.zeeklogs.js
      target: /opt/arkime/wiseService/source.zeeklogs.js
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 90s
      timeout: 30s
      retries: 3
      start_period: 210s
  arkime-live:
    build:
      context: .
      dockerfile: Dockerfiles/arkime.Dockerfile
    image: ghcr.io/idaholab/malcolm/arkime:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    network_mode: host
    cap_add:
      # IPC_LOCK - to lock memory, preventing swapping
    - IPC_LOCK
      # SYS_RESOURCE - for increasing memlock limits
    - SYS_RESOURCE
      # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
    - NET_ADMIN
    - NET_RAW
      # SYS_NICE - to set process nice values, real-time scheduling policies, I/O scheduling
    - SYS_NICE
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/upload-common.env
    - ./config/pcap-capture.env
    - ./config/auth.env
    - ./config/arkime.env
    - ./config/arkime-live.env
    - ./config/arkime-secret.env
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/lua
      target: /opt/arkime/lua
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/rules
      target: /opt/arkime/rules
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap
      target: /data/pcap
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/etc/config.ini
      target: /opt/arkime/etc/config.orig.ini
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/etc/user_settings.json
      target: /opt/arkime/etc/user_settings.json
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./arkime/wise/source.zeeklogs.js
      target: /opt/arkime/wiseService/source.zeeklogs.js
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 90s
      timeout: 30s
      retries: 3
      start_period: 210s
  zeek:
    build:
      context: .
      dockerfile: Dockerfiles/zeek.Dockerfile
    image: ghcr.io/idaholab/malcolm/zeek:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: zeek
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/upload-common.env
    - ./config/zeek.env
    - ./config/zeek-secret.env
    - ./config/zeek-offline.env
    depends_on:
    - opensearch
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap
      target: /pcap
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs/upload
      target: /zeek/upload
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs/extract_files
      target: /zeek/extract_files
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek/intel
      target: /opt/zeek/share/zeek/site/intel
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek/custom
      target: /opt/zeek/share/zeek/site/custom
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek/config/local.zeek
      target: /opt/zeek/share/zeek/site/local.zeek
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  zeek-live:
    build:
      context: .
      dockerfile: Dockerfiles/zeek.Dockerfile
    image: ghcr.io/idaholab/malcolm/zeek:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    network_mode: host
    cap_add:
      # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
    - NET_ADMIN
    - NET_RAW
      # SYS_NICE - to set process nice values, real-time scheduling policies, I/O scheduling
    - SYS_NICE
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/upload-common.env
    - ./config/pcap-capture.env
    - ./config/zeek.env
    - ./config/zeek-secret.env
    - ./config/zeek-live.env
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs/live
      target: /zeek/live
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs/extract_files
      target: /zeek/extract_files
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek/intel
      target: /opt/zeek/share/zeek/site/intel
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek/custom
      target: /opt/zeek/share/zeek/site/custom
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek/config/local.zeek
      target: /opt/zeek/share/zeek/site/local.zeek
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  suricata:
    build:
      context: .
      dockerfile: Dockerfiles/suricata.Dockerfile
    image: ghcr.io/idaholab/malcolm/suricata:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: suricata
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/upload-common.env
    - ./config/suricata.env
    - ./config/suricata-offline.env
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata-logs
      target: /var/log/suricata
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap
      target: /data/pcap
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata/rules
      target: /opt/suricata/rules
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata/include-configs
      target: /opt/suricata/include-configs
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
  suricata-live:
    build:
      context: .
      dockerfile: Dockerfiles/suricata.Dockerfile
    image: ghcr.io/idaholab/malcolm/suricata:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    network_mode: host
    cap_add:
      # IPC_LOCK - to lock memory, preventing swapping
    - IPC_LOCK
      # SYS_RESOURCE - for increasing memlock limits
    - SYS_RESOURCE
      # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
    - NET_ADMIN
    - NET_RAW
      # SYS_NICE - to set process nice values, real-timescheduling policies, I/O scheduling
    - SYS_NICE
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/upload-common.env
    - ./config/pcap-capture.env
    - ./config/suricata.env
    - ./config/suricata-live.env
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata-logs
      target: /var/log/suricata
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata/rules
      target: /opt/suricata/rules
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./suricata/include-configs
      target: /opt/suricata/include-configs
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
  file-monitor:
    build:
      context: .
      dockerfile: Dockerfiles/file-monitor.Dockerfile
    image: ghcr.io/idaholab/malcolm/file-monitor:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: file-monitor
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/auth-common.env
    - ./config/dashboards.env
    - ./config/zeek.env
    - ./config/zeek-secret.env
    environment:
      VIRTUAL_HOST: 'file-monitor.malcolm.local'
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs/extract_files
      target: /zeek/extract_files
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs/current
      target: /zeek/logs
    - type: bind
      bind:
        create_host_path: false
      source: ./yara/rules
      target: /yara-rules/custom
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  pcap-capture:
    build:
      context: .
      dockerfile: Dockerfiles/pcap-capture.Dockerfile
    image: ghcr.io/idaholab/malcolm/pcap-capture:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    network_mode: host
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      # IPC_LOCK - to lock memory, preventing swapping
    - IPC_LOCK
      # SYS_RESOURCE - for increasing memlock limits
    - SYS_RESOURCE
      # SYS_ADMIN - for netsniff-ng to set the disc I/O scheduler policy
    - SYS_ADMIN
      # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
    - NET_ADMIN
    - NET_RAW
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/pcap-capture.env
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap/upload
      target: /pcap
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  pcap-monitor:
    build:
      context: .
      dockerfile: Dockerfiles/pcap-monitor.Dockerfile
    image: ghcr.io/idaholab/malcolm/pcap-monitor:25.06.0
    profiles: ["malcolm", "hedgehog"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: pcap-monitor
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/upload-common.env
    depends_on:
    - opensearch
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./zeek-logs
      target: /zeek
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap
      target: /pcap
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s
  upload:
    build:
      context: .
      dockerfile: Dockerfiles/file-upload.Dockerfile
    image: ghcr.io/idaholab/malcolm/file-upload:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: upload
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/auth.env
    environment:
      VIRTUAL_HOST: 'upload.malcolm.local'
    ports:
    - 127.0.0.1:8022:22
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./pcap/upload
      target: /var/www/upload/server/php/chroot/files
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  htadmin:
    image: ghcr.io/idaholab/malcolm/htadmin:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/htadmin.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: htadmin
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/auth.env
    - ./config/auth-common.env
    environment:
      VIRTUAL_HOST: 'htadmin.malcolm.local'
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./htadmin/metadata
      target: /var/www/htadmin/config/metadata
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/htpasswd
      target: /var/www/htadmin/auth/htpasswd
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
  freq:
    image: ghcr.io/idaholab/malcolm/freq:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/freq.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: freq
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/lookup-common.env
    environment:
      VIRTUAL_HOST: 'freq.malcolm.local'
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  netbox:
    image: ghcr.io/idaholab/malcolm/netbox:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/netbox.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: netbox
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/auth-common.env
    - ./config/netbox-common.env
    - ./config/netbox.env
    - ./config/netbox-secret.env
    - ./config/postgres.env
    - ./config/redis.env
    environment:
      VIRTUAL_HOST: 'netbox.malcolm.local'
    depends_on:
    - postgres
    - redis
    - redis-cache
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./netbox/config
      target: /etc/netbox/config/configmap
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./netbox/media
      target: /opt/netbox/netbox/media
    - type: bind
      bind:
        create_host_path: false
      source: ./netbox/preload
      target: /opt/netbox-preload/configmap
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./netbox/custom-plugins
      target: /opt/netbox-custom-plugins
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s
  postgres:
    image: ghcr.io/idaholab/malcolm/postgresql:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/postgresql.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: postgres
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/netbox-common.env
    - ./config/postgres.env
    environment:
      VIRTUAL_HOST: 'postgres.malcolm.local'
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./postgres
      target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s
  redis:
    image: ghcr.io/idaholab/malcolm/redis:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/redis.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: redis
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/netbox-common.env
    - ./config/redis.env
    environment:
      VIRTUAL_HOST: 'redis.malcolm.local'
    command:
    - sh
    - -c
    - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./redis
      target: /data
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s
  redis-cache:
    image: ghcr.io/idaholab/malcolm/redis:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/redis.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: redis-cache
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/netbox-common.env
    - ./config/redis.env
    environment:
      VIRTUAL_HOST: 'redis-cache.malcolm.local'
    command:
    - sh
    - -c
    - redis-server --requirepass $$REDIS_PASSWORD
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s
  api:
    image: ghcr.io/idaholab/malcolm/api:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/api.Dockerfile
    command: gunicorn --bind 0:5000 manage:app
    restart: "no"
    stdin_open: false
    tty: true
    hostname: api
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/upload-common.env
    - ./config/auth-common.env
    - ./config/dashboards.env
    - ./config/arkime.env
    - ./config/netbox-common.env
    - ./config/netbox-secret.env
    - ./config/opensearch.env
    environment:
      VIRTUAL_HOST: 'api.malcolm.local'
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./.opensearch.primary.curlrc
      target: /var/local/curlrc/.opensearch.primary.curlrc
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
  keycloak:
    image: ghcr.io/idaholab/malcolm/keycloak:25.06.0
    profiles: ["malcolm"]
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    build:
      context: .
      dockerfile: Dockerfiles/keycloak.Dockerfile
    restart: "no"
    stdin_open: false
    tty: true
    hostname: keycloak
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/auth-common.env
    - ./config/postgres.env
    - ./config/keycloak.env
    command:
    - /opt/keycloak/bin/kc.sh
    - start
    volumes:
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s
  nginx-proxy:
    build:
      context: .
      dockerfile: Dockerfiles/nginx.Dockerfile
    image: ghcr.io/idaholab/malcolm/nginx-proxy:25.06.0
    profiles: ["malcolm"]
    userns_mode: keep-id
    logging:
      driver: local
      options:
        max-size: 200m
        max-file: 2
        compress: "false"
    restart: "no"
    stdin_open: false
    tty: true
    hostname: nginx-proxy
    networks:
    - default
    env_file:
    - ./config/process.env
    - ./config/ssl.env
    - ./config/opensearch.env
    - ./config/dashboards.env
    - ./config/arkime.env
    - ./config/keycloak.env
    - ./config/netbox-common.env
    - ./config/auth-common.env
    - ./config/nginx.env
    depends_on:
    - api
    - arkime
    - dashboards
    - file-monitor
    - htadmin
    - keycloak
    - netbox
    - upload
    ports:
    - 0.0.0.0:443:443
    - 127.0.0.1:9200:9200
    volumes:
    - nginx-log-path:/var/log/nginx
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/ca-trust
      target: /var/local/ca-trust
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/nginx_ldap.conf
      target: /etc/nginx/nginx_ldap.conf
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/htpasswd
      target: /etc/nginx/auth/htpasswd
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/certs
      target: /etc/nginx/certs
      read_only: true
    - type: bind
      bind:
        create_host_path: false
      source: ./nginx/certs/dhparam.pem
      target: /etc/nginx/dhparam/dhparam.pem
      read_only: true
    healthcheck:
      test: ["CMD", "/usr/local/bin/container_health.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    labels:
      traefik.enable: false

volumes:
  # shared named volume so filebeat can access nginx access logs
  nginx-log-path:

networks:
  default:
    external: false
